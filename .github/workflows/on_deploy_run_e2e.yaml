name: Playwright Tests

on:
  workflow_call:
    inputs:
      enviromnent_url:
        description: 'The URL of the production deployment'
        required: true
        type: string
jobs:
  run-e2e-tests:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    if: github.event.deployment_status.state == 'success'
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
      - uses: pnpm/action-setup@v2
        with:
          version: 9
      - name: Get installed Playwright version
        id: playwright-version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV
      - name: Cache playwright binaries
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      - run: pnpm install --frozen-lockfile
      - run: pnpm dlx playwright install --with-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'
      - run: pnpm dlx playwright install-deps
        if: steps.playwright-cache.outputs.cache-hit != 'true'

      - name: Run Playwright tests
        run: pnpm dlx playwright test
        env:
          PLAYWRIGHT_BASE_URL: ${{ inputs.enviromnent_url }}
      - uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4
        if: always()
        with:
          name: playwright-test-results
          path: test-results/
